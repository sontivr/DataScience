---
title: "Reproducible Research: Peer Assessment 2"
output: 
  html_document:
    keep_md: true
---

```{r setup, include=FALSE}
Sys.setenv(cache.path = "cache")
knitr::opts_chunk$set(cache=TRUE)

# helper function to install/load the packages if they are missing
usePackage <- function(p) {
    if (!is.element(p, installed.packages()[,1]))
        install.packages(p, dep = TRUE)
    require(p, character.only = TRUE)
}

```


## Title: 
###### Your document should have a title that briefly summarizes your data analysis
## Synopsis: 
###### Immediately after the title, there should be a synopsis which describes and summarizes your analysis in at most 10 ###### complete sentences.


## Data Processing
###### There should be a section titled Data Processing which describes (in words and code) how the data were loaded into R and ###### processed for analysis. In particular, your analysis must start from the raw CSV file containing the data. You cannot do ###### any preprocessing outside the document. If preprocessing is time-consuming you may consider using the 𝚌𝚊𝚌𝚑𝚎 = ###### 𝚃𝚁𝚄𝙴 option for certain code chunks.
#### Loading and preprocessing the data
``` {r echo=TRUE, cache = TRUE}
library(stats)
library(R.utils)
library(data.table)
library((dplyr)
library(stringdist)
library(tm)

# source
sourceURL<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
sourceFileCompressed<-"StormData.csv.bz2"
sourceFile<-"StormData.csv"

start_time <- Sys.time()

# downlod the compressed file if it doesn't exist in the current directory
if (!file.exists(sourceFileCompressed)) {
  download.file(sourceURL, destfile = sourceFileCompressed, mode = "wb")
  print(paste0("It took ", Sys.time() - start_time, " to download ", sourceFileCompressed, "."), quote = FALSE)
}

start_time <- Sys.time()

# if not uncompressed already
if (!file.exists(sourceFile)) {
  bunzip2(sourceFileCompressed, overwrite = T, remove = FALSE)
  print(paste0("It took ", Sys.time() - start_time, " to uncompress ", sourceFileCompressed, "."), quote = FALSE)
}

start_time <- Sys.time()

# read the file into a data frame
if (file.exists(sourceFile)) {
    stormdata <- read.csv(sourceFile, sep = ",", header = TRUE)
    # print "Skip reading the file..."
    print(paste0("It took ", Sys.time() - start_time, " to read ", sourceFile, "."), quote = FALSE)
} else {
  print(paste0(sourceFile, " does not exist!"), quote = FALSE)
  exit (-1)
}

```


## List objects in the env
``` {r echo = TRUE}
ls()
summary(stormdata)
#  Based on  the articale "How To Handle Exponent Value of PROPDMGEXP and CROPDMGEXP" at
# https://rstudio-pubs-static.s3.amazonaws.com/58957_37b6723ee52b455990e149edde45e5b6.html
# create reference table for exponents used and the corresponding multipliers
dmgexpkv = data.table(x=c("", "-", "?", "+", 0, seq(1:8), "H", "h", "K","k","M","m","B","b"), y=c(0,0,0,1,rep(10,9),100,100,1000,1000,1000000,1000000,1000000000,1000000000))
names(dmgexpkv) <- c("PROPDMGEXP", "PROPDMGEXPVAL")
#

# stormdata.economic <- stormdata[!(stormdata$PROPDMG==0 & stormdata$CROPDMG==0),]
# stormdata.economic <- subset(stormdata, !(stormdata$PROPDMG==0 & stormdata$CROPDMG==0))
# stormdata consider observarions for which both PROPDMG and CROPDMG are not 0
# stormdata.econ <- subset(stormdata, !(PROPDMG==0 & CROPDMG==0), select = c(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP))
# stormdata.econ <- merge(stormdata.econ, dmgexpkv, by.x = "PROPDMGEXP", by.y = "PROPDMGEXP")
# names(dmgexpkv) <- c("CROPDMGEXP", "CROPDMGEXPVAL")
# stormdata.econ <- merge(stormdata.econ, dmgexpkv, by.x = "CROPDMGEXP", by.y = "CROPDMGEXP")
# stormdata.econdmg <- stormdata.econ %>% mutate(ECONDMG = PROPDMG*PROPDMGEXPVAL+CROPDMG*CROPDMGEXPVAL) %>% select(EVTYPE,ECONDMG)
# stormdata.econdmg2 <- aggregate(ECONDMG ~ EVTYPE, data = stormdata.econdmg, FUN = 'sum') %>% arrange(desc(ECONDMG))
# barplot(as.matrix(head(stormdata.econdmg2$ECONDMG,30)), beside = TRUE, col=rainbow(5), horiz=TRUE,names.arg = sd.econdmg3$EVTYPE, cex.names = 0.5, las = 1 )

# <br > source(&quot;https://raw.github.com/schaunwheeler/tmt/master/R/tmt.R&quot;)<br />
```


### consider observarions for which both PROPDMGEXP and CROPDMGEXP are not 0
# stormdata.econ <- subset(stormdata.econ, !(PROPDMGEXP %in% c("", "?", "-") & CROPDMGEXP %in% c("", "?", "-"))) 
# to get the frequency of event types
# as.data.frame(table(toupper(stormdata.econ$EVTYPE))) %>% arrange(desc(Freq)) 

## Analysis:
#### The analysis document must have at least one figure containing a plot.
#### Your analysis must have no more than three figures. Figures may have multiple plots in them (i.e. panel plots), but there #### cannot be more than three figures total.



## Results


###### There should be a section titled Results in which your results are presented.
###### You may have other sections in your analysis, but Data Processing and Results are required.

